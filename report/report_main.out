\BOOKMARK [1][-]{section.1}{Introduction}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Project Goals}{section.1}% 2
\BOOKMARK [3][-]{subsubsection.1.1.1}{Objective 1}{subsection.1.1}% 3
\BOOKMARK [3][-]{subsubsection.1.1.2}{Objective 2}{subsection.1.1}% 4
\BOOKMARK [3][-]{subsubsection.1.1.3}{Objective 3}{subsection.1.1}% 5
\BOOKMARK [1][-]{section.2}{Motivation and Background}{}% 6
\BOOKMARK [2][-]{subsection.2.1}{Motivations}{section.2}% 7
\BOOKMARK [2][-]{subsection.2.2}{Background}{section.2}% 8
\BOOKMARK [1][-]{section.3}{The Virtual Keyboard}{}% 9
\BOOKMARK [2][-]{subsection.3.1}{UI design}{section.3}% 10
\BOOKMARK [2][-]{subsection.3.2}{Implementation}{section.3}% 11
\BOOKMARK [3][-]{subsubsection.3.2.1}{Python Script}{subsection.3.2}% 12
\BOOKMARK [3][-]{subsubsection.3.2.2}{Jimulator Plug-in Integration}{subsection.3.2}% 13
\BOOKMARK [3][-]{subsubsection.3.2.3}{The Keyboard Interface In Komodo}{subsection.3.2}% 14
\BOOKMARK [2][-]{subsection.3.3}{Reverse Engineering The Jimulator Plug-in}{section.3}% 15
\BOOKMARK [2][-]{subsection.3.4}{Evaluation and Improvements}{section.3}% 16
\BOOKMARK [1][-]{section.4}{The Basic OS}{}% 17
\BOOKMARK [2][-]{subsection.4.1}{Layout and structuring}{section.4}% 18
\BOOKMARK [2][-]{subsection.4.2}{Self Imposed Conventions}{section.4}% 19
\BOOKMARK [2][-]{subsection.4.3}{Virtual Screen}{section.4}% 20
\BOOKMARK [3][-]{subsubsection.4.3.1}{Keeping the cursor position consistent}{subsection.4.3}% 21
\BOOKMARK [3][-]{subsubsection.4.3.2}{Outputting a character}{subsection.4.3}% 22
\BOOKMARK [2][-]{subsection.4.4}{The SVC Handler}{section.4}% 23
\BOOKMARK [2][-]{subsection.4.5}{The Reset Handler}{section.4}% 24
\BOOKMARK [2][-]{subsection.4.6}{Data Structures and Unit testing}{section.4}% 25
\BOOKMARK [2][-]{subsection.4.7}{Evaluation}{section.4}% 26
\BOOKMARK [1][-]{section.5}{Implementing Thread Switching}{}% 27
\BOOKMARK [2][-]{subsection.5.1}{Thread Switching In Unix}{section.5}% 28
\BOOKMARK [2][-]{subsection.5.2}{The Challenges of Thread Switching}{section.5}% 29
\BOOKMARK [3][-]{subsubsection.5.2.1}{When is the time-slicing procedure called?}{subsection.5.2}% 30
\BOOKMARK [3][-]{subsubsection.5.2.2}{When can I safely interrupt?}{subsection.5.2}% 31
\BOOKMARK [3][-]{subsubsection.5.2.3}{How do I ensure the user stack's consistency?}{subsection.5.2}% 32
\BOOKMARK [3][-]{subsubsection.5.2.4}{How do you store and load a thread's context?}{subsection.5.2}% 33
\BOOKMARK [2][-]{subsection.5.3}{Integration With The Virtual Keyboard}{section.5}% 34
\BOOKMARK [2][-]{subsection.5.4}{Scheduling}{section.5}% 35
\BOOKMARK [2][-]{subsection.5.5}{Evaluation of threading system}{section.5}% 36
\BOOKMARK [1][-]{section.6}{Reflection and Conclusions}{}% 37
\BOOKMARK [2][-]{subsection.6.1}{Evaluation of Project Strategy.}{section.6}% 38
\BOOKMARK [2][-]{subsection.6.2}{Project Goals}{section.6}% 39
\BOOKMARK [3][-]{subsubsection.6.2.1}{Objective 1}{subsection.6.2}% 40
\BOOKMARK [3][-]{subsubsection.6.2.2}{Objective 2}{subsection.6.2}% 41
\BOOKMARK [3][-]{subsubsection.6.2.3}{Objective 3}{subsection.6.2}% 42
